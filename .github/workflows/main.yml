# This is a basic workflow to help you get started with Actions

name: Test Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          srcdir="$( pwd )"; echo "In $srcdir";
          sudo apt install -y -y remake
          bash ./autogen.sh \
            && mkdir -p ../build/ && cd ../build/ && (
              find "../${srcdir##*/}" -name "*.sh" -printf 'ln -sf %p %P %P %f\n'  | sed -r -e ':a s~ \.\./([^ ]*) ([^ ]+/|)([^ /]+/)([^/ ]+) ~ ../../\1 \2\4 ~; ta; s~^(.*-sf \.\./[^ ]*) [^ ]+ ([^ ]*/|)([^ /]+) .*~mkdir -p \2 \&\& \1 \2\3 ~; tk; d; :k \~  ~d;' | bash -x -s --; 
            ) \
            && ln -sf ../src/*.sh ./ \
            && ( "$srcdir/configure" --prefix=/usr --enable-debug --disable-silent-rules || true ) \
            && ( ( remake -k --ignore-errors --trace V=1 || true; ) || true; true; ) \
            && echo $'#!/bin/bash\n\necho "Script begin"\ntypeset -p -a\nvar=1\nfunction foo () {\n  echo "In function foo"\n  echo "var=$var"\n  typeset -v var\n  ((++var))\n  echo "var=$var"\n  typeset -v var\n  unset var\n  typeset -v var\n  return 0\n}\n\nfoo\nfoo\n' | tee ./test_bashdb.sh \
            && ( { echo "s"; echo "s 8"; echo "i var"; } | ./bashdb  /tmp/test_bashdb.sh ) \
            && echo $?
